plugins {
    id "com.android.application"
    id "kotlin-android"
    // The Flutter Gradle Plugin must be applied after the Android and Kotlin Gradle plugins.
    id "dev.flutter.flutter-gradle-plugin"
}

// 키스토어 속성 불러오기
def keystoreProperties = new Properties()
def keystorePropertiesFile = rootProject.file('key.properties')
if (keystorePropertiesFile.exists()) {
    keystoreProperties.load(new FileInputStream(keystorePropertiesFile))
}

android {
    namespace = "com.pingpong.gnu.app"
    compileSdk = flutter.compileSdkVersion
    ndkVersion = flutter.ndkVersion

    compileOptions {
        sourceCompatibility = JavaVersion.VERSION_1_8
        targetCompatibility = JavaVersion.VERSION_1_8
    }

    kotlinOptions {
        jvmTarget = JavaVersion.VERSION_1_8
    }

    defaultConfig {
        // TODO: Specify your own unique Application ID (https://developer.android.com/studio/build/application-id.html).
        applicationId = "com.pingpong.gnu.app"
        // You can update the following values to match your application needs.
        // For more information, see: https://flutter.dev/to/review-gradle-config.
        minSdk = flutter.minSdkVersion
        targetSdk = flutter.targetSdkVersion
        versionCode = flutter.versionCode
        versionName = flutter.versionName
        
        // 멀티덱스 활성화
        multiDexEnabled true
    }

    signingConfigs {
        release {
            keyAlias keystoreProperties['keyAlias']
            keyPassword keystoreProperties['keyPassword']
            storeFile keystoreProperties['storeFile'] ? file(keystoreProperties['storeFile']) : null
            storePassword keystoreProperties['storePassword']
        }
    }

    buildTypes {
        release {
            // 릴리스 서명 설정 적용
            signingConfig signingConfigs.release
            
            // 난독화 활성화 (문제 원인 분석을 위해)
            minifyEnabled true
            shrinkResources true
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
            
            // 난독화 비활성화 코드
            // minifyEnabled false
            // shrinkResources false
        }
    }
}

dependencies {
    // 멀티덱스 지원 추가
    implementation 'androidx.multidex:multidex:2.0.1'
    
    // Play Core 라이브러리 대신 분할된 호환 모듈 사용
    // Play Core는 deprecated 되었고 Android 14와 호환되지 않음
    implementation 'com.google.android.play:app-update:2.1.0'
    implementation 'com.google.android.play:review:2.0.1'
    implementation 'com.google.android.play:feature-delivery:2.1.0'
}

flutter {
    source = "../.."
}
